pipeline {
    agent {
        docker {
            image 'docker:latest'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        DOCKER_IMAGE = 'qkrdusgn00/lte-react'
        REGISTRY = 'index.docker.io'
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'develop-FE', url: 'https://lab.ssafy.com/s11-ai-image-sub1/S11P21E101.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // npm ci를 사용하여 의존성 설치
                    sh 'npm ci'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // 리액트 테스트 실행
                    sh 'npm test'
                }
            }
        }

        stage('Build Image') {
            steps {
                script {
                    // Docker Compose로 이미지 빌드
                    sh 'apt-get update && apt-get install -y docker-compose'
                    sh 'docker-compose build'
                }
            }
        }

        stage('Push Image') {
            steps {
                script {
                    // DockerHub에 로그인 후 이미지 푸시
                    docker.withRegistry("https://${REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                        sh "docker tag ${DOCKER_IMAGE}:latest ${DOCKER_IMAGE}:latest"
                        sh "docker push ${DOCKER_IMAGE}:latest"
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Docker Compose로 최신 이미지로 컨테이너 실행 및 상태 확인
                    sh 'docker-compose pull'
                    sh 'docker-compose up -d'
                    sh 'docker-compose ps'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        failure {
            echo 'Build failed. Please check logs.'
        }
    }
}
